{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { finalize, first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../authentication.service\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"primeng/toast\";\nimport * as i6 from \"primeng/card\";\nimport * as i7 from \"primeng/inputtext\";\nimport * as i8 from \"primeng/button\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"primeng/progressbar\";\n\nfunction LoginComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"p\", 21);\n    i0.ɵɵtext(2, \"Web Application\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nconst _c0 = function () {\n  return {\n    \"height\": \"6px\"\n  };\n};\n\nfunction LoginComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"p-progressBar\", 22);\n    i0.ɵɵelementStart(2, \"p\", 23);\n    i0.ɵɵtext(3, \"Logging in User, please wait...\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(2, _c0));\n  }\n}\n\nconst _c1 = function () {\n  return {\n    width: \"500px\",\n    \"margin\": \"120px\"\n  };\n};\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(authenticationService, messageService, formBuilder, router) {\n      this.authenticationService = authenticationService;\n      this.messageService = messageService;\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.loading = false;\n      this.statusMessage = '';\n      this.loginForm = formBuilder.group({\n        email: ['', Validators.required],\n        password: ['', Validators.required]\n      });\n      this.credentials = {\n        email: '',\n        password: ''\n      };\n    }\n\n    ngOnInit() {}\n    /**\r\n     * triggered from the html file\r\n     */\n\n\n    login() {\n      //if form is invalid report error and return to previous state\n      if (this.loginForm.invalid) {\n        this.statusMessage = 'email and/or password invalid';\n        this.showError();\n        return;\n      }\n\n      this.loading = true;\n      console.log(\"Attempting to Login\");\n      this.credentials.email = this.loginForm.controls.email.value;\n      this.credentials.password = this.loginForm.controls.password.value;\n      this.authenticationService.login(this.credentials).pipe(first(), finalize(() => this.loading = false)).subscribe(resp => {\n        this.user = Object.assign({}, resp.body); //this.statusMessage = `Logged in User with email: ${user.email}`;\n\n        const keys = resp.headers.keys();\n        console.log(\"keys:: \" + keys.length);\n        console.log(this.statusMessage);\n        this.showSuccess();\n        this.router.navigate(['user'], {\n          queryParams: {\n            email: this.user.email\n          }\n        });\n      }, err => {\n        this.statusMessage = `Failed to login User with Credentails: email: ${this.credentials.email}:`;\n        console.log(this.statusMessage + err.message);\n        console.error(\"login error\", err.message);\n        this.showError();\n      });\n    }\n    /**\r\n     * Triggered from the html and navigates to the signUp page\r\n     */\n\n\n    signUp() {}\n\n    showSuccess() {\n      this.messageService.add({\n        severity: 'success',\n        summary: 'Success',\n        detail: this.statusMessage\n      });\n    }\n\n    showError() {\n      this.messageService.add({\n        severity: 'error',\n        summary: 'Error',\n        detail: this.statusMessage\n      });\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthenticationService), i0.ɵɵdirectiveInject(i2.MessageService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.Router));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    features: [i0.ɵɵProvidersFeature([MessageService])],\n    decls: 21,\n    vars: 5,\n    consts: [[1, \"loginContainer\"], [\"position\", \"top-right\"], [\"header\", \"Enter Credentials to Login\", \"styleClass\", \"p-card-shadow\", 1, \"p-fluid\", \"p-grid\", \"p-jc-center\"], [\"pTemplate\", \"header\", \"class\", \"titleContainer\"], [\"id\", \"formContainer\", 1, \"p-col-12\", \"p-fluid\", \"p-jc-center\"], [1, \"p-grid\", \"p-fluid\", \"p-jc-center\", 3, \"formGroup\", \"ngSubmit\"], [\"id\", \"credentialsContainer\", 1, \"p-col-8\"], [\"id\", \"credentialsGrid\", 1, \"p-grid\", \"p-fluid\"], [\"id\", \"email\", 1, \"p-col-12\"], [1, \"p-input-icon-right\"], [1, \"pi\", \"pi-envelope\"], [\"type\", \"text\", \"pInputText\", \"\", \"formControlName\", \"email\", \"placeholder\", \"email address\"], [\"id\", \" password\", 1, \"p-col-12\"], [1, \"pi\", \"pi-key\"], [\"type\", \"text\", \"formControlName\", \"password\", \"placeholder\", \"password\", \"pInputText\", \"\"], [\"id\", \"loginButton\", 1, \"p-col-4\", \"p-offset-4\"], [\"pButton\", \"\", \"pRipple\", \"\", \"type\", \"submit\", \"label\", \"Login\", \"icon\", \"pi pi-angle-double-right\", \"iconPos\", \"right\", 1, \"p-button-outlined\"], [1, \"p-col-6\", \"p-offset-3\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"SignUp for an Account\", \"icon\", \"pi pi-user-plus\", 1, \"p-button-link\", 2, \"width\", \"270px\", 3, \"click\"], [4, \"ngIf\"], [1, \"titleContainer\"], [1, \"title\"], [\"mode\", \"indeterminate\", \"label\", \"logging in User please wait...\"], [1, \"progressBarText\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"p-toast\", 1);\n        i0.ɵɵelementStart(2, \"p-card\", 2);\n        i0.ɵɵtemplate(3, LoginComponent_ng_template_3_Template, 3, 0, \"ng-template\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4)(5, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵelementStart(6, \"div\", 6)(7, \"div\", 7)(8, \"div\", 8)(9, \"span\", 9);\n        i0.ɵɵelement(10, \"i\", 10)(11, \"input\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 12)(13, \"span\", 9);\n        i0.ɵɵelement(14, \"i\", 13)(15, \"input\", 14);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 15);\n        i0.ɵɵelement(17, \"button\", 16);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(18, \"div\", 17)(19, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_19_listener() {\n          return ctx.signUp();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(20, LoginComponent_div_20_Template, 4, 3, \"div\", 19);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(4, _c1));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    directives: [i5.Toast, i6.Card, i2.PrimeTemplate, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i7.InputText, i3.NgControlStatus, i3.FormControlName, i8.ButtonDirective, i9.NgIf, i10.ProgressBar],\n    styles: [\".titleContainer[_ngcontent-%COMP%]{margin-top:-30px;font-size:30px;font-weight:200;text-align:center;height:50px}.progressBarText[_ngcontent-%COMP%]{font-size:10px;font-style:italic}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}