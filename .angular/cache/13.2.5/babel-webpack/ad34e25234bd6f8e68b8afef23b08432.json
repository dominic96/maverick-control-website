{"ast":null,"code":"import { throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../authentication/authentication.service\";\n/**\r\n * @author Dominic Mundirewa\r\n * @implements a resolver that loads a User's account information\r\n * before the user Account component is added\r\n */\n\nexport let LoadUserResolver = /*#__PURE__*/(() => {\n  class LoadUserResolver {\n    constructor(authenticationService) {\n      this.authenticationService = authenticationService;\n    }\n\n    resolve(route, state) {\n      let email = route.queryParamMap.get(\"email\");\n      console.log(`Resolving Account with email: ${email}`);\n\n      try {\n        return this.authenticationService.loadUserAccount(email);\n      } catch (error) {\n        console.log(\"failed to load user\");\n        return throwError(\"Failed to Load User \");\n      }\n    }\n\n  }\n\n  LoadUserResolver.ɵfac = function LoadUserResolver_Factory(t) {\n    return new (t || LoadUserResolver)(i0.ɵɵinject(i1.AuthenticationService));\n  };\n\n  LoadUserResolver.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoadUserResolver,\n    factory: LoadUserResolver.ɵfac,\n    providedIn: 'root'\n  });\n  return LoadUserResolver;\n})();","map":null,"metadata":{},"sourceType":"module"}